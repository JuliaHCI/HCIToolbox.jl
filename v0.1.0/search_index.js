var documenterSearchIndex = {"docs":
[{"location":"api.html#API/Reference-1","page":"API/Reference","title":"API/Reference","text":"","category":"section"},{"location":"api.html#","page":"API/Reference","title":"API/Reference","text":"For now, here is a dump of all documented functions and types.","category":"page"},{"location":"api.html#Index-1","page":"API/Reference","title":"Index","text":"","category":"section"},{"location":"api.html#","page":"API/Reference","title":"API/Reference","text":"","category":"page"},{"location":"api.html#API/Reference-2","page":"API/Reference","title":"API/Reference","text":"","category":"section"},{"location":"api.html#","page":"API/Reference","title":"API/Reference","text":"Modules = [HCIToolbox]","category":"page"},{"location":"api.html#HCIToolbox.combine-Union{Tuple{AbstractArray{T,3}}, Tuple{T}} where T","page":"API/Reference","title":"HCIToolbox.combine","text":"combine(cube, [angles]; method=median)\n\nCombine all the frames of a cube using method. If angles are provided, will use derotate! before combining.\n\nNote that with angles this is slightly slower than doing combine(derotate!(cube, angles)), if you can overwrite the input.\n\nExamples\n\njulia> X = ones(2, 3, 3)\n2×3×3 Array{Float64,3}:\n[:, :, 1] =\n 1.0  1.0  1.0\n 1.0  1.0  1.0\n\n[:, :, 2] =\n 1.0  1.0  1.0\n 1.0  1.0  1.0\n\n[:, :, 3] =\n 1.0  1.0  1.0\n 1.0  1.0  1.0\n\njulia> combine(X)\n3×3 Array{Float64,2}:\n 1.0  1.0  1.0\n 1.0  1.0  1.0\n 1.0  1.0  1.0\n\njulia> combine(X, [0, 90])\n1×3×3 Array{Float64,3}:\n[:, :, 1] =\n 1.0  1.0  1.0\n\n[:, :, 2] =\n NaN  1.0  NaN\n\n[:, :, 3] =\n 1.0  1.0  1.0\n\n\n\n\n\n","category":"method"},{"location":"api.html#HCIToolbox.derotate!-Union{Tuple{T}, Tuple{AbstractArray{T,3},AbstractArray{T,1} where T}} where T<:AbstractFloat","page":"API/Reference","title":"HCIToolbox.derotate!","text":"derotate!(cube, angles)\n\nIn-place version of derotate\n\n\n\n\n\n","category":"method"},{"location":"api.html#HCIToolbox.derotate-Union{Tuple{T}, Tuple{AbstractArray{T,3},AbstractArray{T,1} where T}} where T","page":"API/Reference","title":"HCIToolbox.derotate","text":"derotate(cube, angles)\n\nRotates an array using the given angles in degrees.\n\nThis will rotate frame i counter-clockwise by the amount deg2rad(angles[i]).\n\nSee Also\n\nderotate!, rotate, rotate!\n\n\n\n\n\n","category":"method"},{"location":"api.html#HCIToolbox.expand-Tuple{AbstractArray{T,2} where T}","page":"API/Reference","title":"HCIToolbox.expand","text":"expand(matrix)\n\nGiven a matrix of size (n, z), returns a cube of size (n, x, x) where x=√z.\n\nWill throw an error if z is not a perfect square.\n\nExamples\n\njulia> X = ones(3, 4)\n3×4 Array{Float64,2}:\n 1.0  1.0  1.0  1.0\n 1.0  1.0  1.0  1.0\n 1.0  1.0  1.0  1.0\n\njulia> expand(X)\n3×2×2 Array{Float64,3}:\n[:, :, 1] =\n 1.0  1.0\n 1.0  1.0\n 1.0  1.0\n\n[:, :, 2] =\n 1.0  1.0\n 1.0  1.0\n 1.0  1.0\n\nSee Also\n\nflatten\n\n\n\n\n\n","category":"method"},{"location":"api.html#HCIToolbox.flatten-Union{Tuple{AbstractArray{T,3}}, Tuple{T}} where T","page":"API/Reference","title":"HCIToolbox.flatten","text":"flatten(cube)\n\nGiven a cube of size (n, x, y) returns a matrix with size (n, x * y) where each row is a flattened image from the cube.\n\nExamples\n\njulia> X = ones(3, 2, 2)\n3×2×2 Array{Float64,3}:\n[:, :, 1] =\n 1.0  1.0\n 1.0  1.0\n 1.0  1.0\n\n[:, :, 2] =\n 1.0  1.0\n 1.0  1.0\n 1.0  1.0\n\njulia> flatten(X)\n3×4 Array{Float64,2}:\n 1.0  1.0  1.0  1.0\n 1.0  1.0  1.0  1.0\n 1.0  1.0  1.0  1.0\n\nSee Also\n\nexpand\n\n\n\n\n\n","category":"method"},{"location":"api.html#HCIToolbox.mask_circle!-Union{Tuple{T}, Tuple{AbstractArray{T,2},Any}} where T<:AbstractFloat","page":"API/Reference","title":"HCIToolbox.mask_circle!","text":"mask_circle!(::AbstractMatrix, npix; fill=NaN)\n\nIn-place version of mask_circle\n\n\n\n\n\n","category":"method"},{"location":"api.html#HCIToolbox.mask_circle-Tuple{AbstractArray{#s18,2} where #s18<:AbstractFloat,Any}","page":"API/Reference","title":"HCIToolbox.mask_circle","text":"mask_circle(::AbstractMatrix, npix; fill=NaN)\n\nMask the inner-circle of an image with radius npix with value fill. Note that the input type must be compatible with the fill value's type.\n\nSee Also\n\nmask_circle!\n\n\n\n\n\n","category":"method"},{"location":"api.html#HCIToolbox.rotate!-Union{Tuple{T}, Tuple{AbstractArray{T,3},AbstractArray{T,1} where T}} where T<:AbstractFloat","page":"API/Reference","title":"HCIToolbox.rotate!","text":"rotate!(cube, angles)\n\nIn-place version of derotate\n\n\n\n\n\n","category":"method"},{"location":"api.html#HCIToolbox.rotate-Union{Tuple{T}, Tuple{AbstractArray{T,3},AbstractArray{T,1} where T}} where T","page":"API/Reference","title":"HCIToolbox.rotate","text":"rotate(cube, angles)\n\nRotates an array using the given angles in degrees.\n\nThis will rotate frame i clockwise by the amount deg2rad(angles[i]).\n\nSee Also\n\nrotate!, derotate, derotate!\n\n\n\n\n\n","category":"method"},{"location":"index.html#","page":"Home","title":"Home","text":"CurrentModule = HCIToolbox","category":"page"},{"location":"index.html#HCIToolbox.jl-1","page":"Home","title":"HCIToolbox.jl","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"(Image: GitHub) (Image: Build Status) (Image: Coverage) (Image: License)","category":"page"},{"location":"index.html#Installation-1","page":"Home","title":"Installation","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"From Julia enter Pkg mode","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"julia>]\n\n(1.3) pkg> add https://github.com/juliahci/HCIToolbox.jl","category":"page"},{"location":"index.html#License-1","page":"Home","title":"License","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"This work is distributed under the MIT \"expat\" license. See LICENSE for more information.","category":"page"}]
}
